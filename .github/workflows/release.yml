name: Release Plugin

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add Version as environment variable
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Build
        run: |
          BASENAME="${GITHUB_REPOSITORY_NAME}_${VERSION}"
          TARGETS=(
            "x86_64-unknown-linux-gnu|${BASENAME}_linux_amd64"
            "aarch64-unknown-linux-gnu|${BASENAME}_linux_arm64"
            "x86_64-apple-darwin|${BASENAME}_darwin_amd64"
            "aarch64-apple-darwin|${BASENAME}_darwin_arm64"
            "x86_64-pc-windows-msvc|${BASENAME}_windows_amd64"
          )  
          mkdir -p "dist"
          touch "dist/${BASENAME}_checksums.txt"
          for entry in "${TARGETS[@]}"; do
            target=${entry%%|*}
            artifact_name=${entry#*|}
            mkdir -p "target/$artifact_name"
            deno compile --allow-run --allow-env --allow-read --allow-sys --allow-net --target "$target" -o "target/$artifact_name/binary" main.ts
            BINARY=$(basename $(ls target/"$artifact_name"/binary*)) envsubst < manifest.template.yml > "target/$artifact_name/manifest.yml"
            tar -czf "dist/$artifact_name.tar.gz" -C "target/$artifact_name" .
            CHECKSUM=$(shasum -a 256 dist/$artifact_name.tar.gz | awk '{print $1}')
            echo "$CHECKSUM $artifact_name.tar.gz" >> "dist/${BASENAME}_checksums.txt"
            MIME=$(file -b "dist/$artifact_name.tar.gz")
            echo "File type: $MIME"
          done
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plugin-artifacts-${{ github.ref_name }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: plugin-artifacts-${{ github.ref_name }}
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}